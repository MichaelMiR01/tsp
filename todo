
0. rework pragmas:
   -allow any number of leading whitespace space and #
   #tsp::def ....
   # ::tsp::def ...
   ####tsp::def ....
   # # # tsp::def ....


   -tsp::prodef returntype -args arg1 arg2 ..
   # ... # ::tsp::procdef int 
   # ... # ::tsp::procdef void -args void
   # ... # ::tsp::procdef var -args var var int

   -replace tsp::assertcompile, tsp::nocompile with...
   #tsp::compile normal|none|assert|debug

   -actual commands:
   allow tsp::compile outside of proc:
   tsp::compile normal|none|assert|debug  procname procname procname ...

   -commands as pragmas, don't require leading comment character
   when debug, set up traces to watch declared variables, return types



1. what to do with unset?  - probably generate a compile error.
   prob not needed.  just have commands that use 'varname' check if varname was in volatile list, if
   not, then spill var, and then add to volatile list in order to have it reloaded.


2. allocate tcl direct arrays for each number of arguments, or allocate largest used and Arrays.copyRangeOf() 
   to get the size needed for smaller sizes.



30. implement: expr list, lxxxxx, string, concat, append, join

40. implement simple case of: scan, format
