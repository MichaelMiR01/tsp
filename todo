

package require tsp
hyde::configure -compiler javac
tsp::debug /tmp/ntest
tsp::proc bar  {f} {
  #tsp::procdef string -args string
  set x [eof $f]
  return $x
}
tsp::proc bar2 {} {
  #tsp::procdef void
  puts [bar [format stdin]]
}
tsp::log



test that _tmpVar_string_1 is not reused during direct call.

might have to re-arrange where ::tsp::reset_tmpvarsUsed is called, perhaps in parse_body when cmdNestLevel is <1. 



0. clean up exit spill in generated code, only include try/catch if needed (to avoid unnecessary "if (callFrame == null)" )
0. implement nested commands [ ]


1. what to do with unset?  - probably generate a compile error.
   prob not needed.  just have commands that use 'varname' check if varname was in volatile list, if
   not, then spill var, and then add to volatile list in order to have it reloaded.


2. allocate tcl direct arrays for each number of arguments, or allocate largest used and Arrays.copyRangeOf() 
   to get the size needed for smaller sizes.



30. implement: expr list, lxxxxx, string, concat, append, join

40. implement simple case of: scan, format

99. implement C lang generation
