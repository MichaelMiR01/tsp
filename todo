PERFORMANCE: 
  DONE - allocate argument arrays once to a max size, or maybe one array per call
  - check that assignment to var is doing copy only when needed
  - check that 'gets' is load not spill/load, and other cmds
  - check that 'load' does not always cause 'spill'
  - why is spill vars emitting double the code?  (see cat.java)
  - check assign_var_var is just copying ref and preserve
  DONE - check why code outside a loop uses argv_1, and inside it used argv_0
  - array variable cause "TclObject has been deallocated" exception (see langbench hash2.tcl)
  - check if we need to preserve()/release on involing tcl builtin command
  


source tsp.tcl

set compUnit [tsp::init_compunit FILE PROC {ARGBOOL ARGINT ARGDOUBLE ARGSTRING ARGVAR} {}]

dict set compUnit returns void
dict set compUnit argTypes {boolean int double string var}
::tsp::setVarType compUnit BB boolean
::tsp::setVarType compUnit II int
::tsp::setVarType compUnit DD double
::tsp::setVarType compUnit SS string
::tsp::setVarType compUnit VV var
::tsp::get_tmpvar compUnit boolean
::tsp::get_tmpvar compUnit int
::tsp::get_tmpvar compUnit double
::tsp::get_tmpvar compUnit string
::tsp::get_tmpvar compUnit var

::tsp::lang_create_compilable compUnit {/*CODE*/}

--------------------------------------

tsp-clang -  CLEANUP, et.al. macros only to be used in return statement, and as part of
  error exit.  may have to have an compUnit dict field to inidicate the goto was coded
  somewhere, or make sure a dummy goto is code after function entry.


check TspFunc.java - does int_abs need to check for Long.MIN_VALUE ?  (since we can't abs that value)

add sugar and sugar {*} to jtcllib

change tsp_md5 proc to use original nested commands (partially complete)
hyde package - need to include "hyde" directory in env(TCL_CLASSPATH)  (like before????)

check over compiled commands: append, lappend  to be more like lappend - if
   var has been declared volatile for that command, just generated call to
   tcl command code.

c/tcl parser - must check [parse getstring $body {i-4 3}] and [parse getstring $body {i-3 3}]
for "{*}".  This is because c/tcl will expand simple text inside the parser, rather than
returning the "expand" node type.  bah.
HOWTO - check in 'whitespace' ie. the area between words for {*}




