PERFORMANCE: 
  DONE - allocate argument arrays once to a max size, or maybe one array per call
  - check that assignment to var is doing copy only when needed
  DONE - check that 'gets' is load not spill/load, and other cmds
  DONE - check that 'load' does not always cause 'spill'
  DONE - why is spill vars emitting double the code?  (see cat.java)
  - check assign_var_var is just copying ref and preserve
  DONE - check why code outside a loop uses argv_1, and inside it used argv_0
  DONE - array variable cause "TclObject has been deallocated" exception (see langbench hash2.tcl)
  - check if we need to preserve()/release on involing tcl builtin command

  
--------------------------------------
critcl::load bug??
--------------------------------------


source tsp.tcl
tsp::proc foo {} {
  #tsp::procdef void
  #tsp::int a b c
  set a  3
  set b  0
  set c [expr {$a / $b}]
  puts $c
}
tsp::printLog



# simple test

source tsp.tcl; tsp::proc foo {} {
  #tsp::procdef  void
  puts -nonewline "hi "
  puts planet
}
tsp::proc bar {} {
  #tsp::procdef  void
  ::puts "in bar"
  foo
}




--------------------------------------

tsp-clang -  CLEANUP, et.al. macros only to be used in return statement, and as part of
  error exit.  may have to have an compUnit dict field to inidicate the goto was coded
  somewhere, or make sure a dummy goto is code after function entry.

steal tcl.h determination of TCL_LL_MODIFIER and adapt to use as
TSP_LL_SUFFIX, since vc++, osx may need other than LL (e.g., vc++ I64 )


check TspFunc.java - does int_abs need to check for Long.MIN_VALUE ?  (since we can't abs that value)

add sugar and sugar {*} to jtcllib

change tsp_md5 proc to use original nested commands (partially complete)
hyde package - need to include "hyde" directory in env(TCL_CLASSPATH)  (like before????)

check over compiled commands: append, lappend  to be more like lappend - if
   var has been declared volatile for that command, just generated call to
   tcl command code.

c/tcl parser - must check [parse getstring $body {i-4 3}] and [parse getstring $body {i-3 3}]
for "{*}".  This is because c/tcl will expand simple text inside the parser, rather than
returning the "expand" node type.  bah.
HOWTO - check in 'whitespace' ie. the area between words for {*}




