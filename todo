
0. declare shadow vars as static, to reuse.  shadow vars not released at end of code body.  Command proc
   should implement CommandWithDispose so that shadow vars can be collected

1. tcl direct & indirect: use shadow vars if recursive count == 1, otherwise use per-invocation tmpVars (on
   stack)

2. allocate tcl direct arrays for each number of arguments, or allocate largest used and Arrays.copyRangeOf() 
   to get the size needed for smaller sizes.

3. NO- for tcl indirect, perhaps builds array, then use Arrays.asList to get a list, 
   instead of allocating a new TclObject list.

4. on volatile reload, get or duplicate tcl variable into shadow var and reload native from that (saves dirty
   step).

5. interp.newCallFrame() needs to be public, and/or add new CallFrame constructor to hook into interp
   with minimal fuss.


20. implement control commands: if, while, for, foreach, switch, case, break, continue, return,  catch

30. implement: expr list, lxxxxx, string, concat, append, join

40. implement simple case of: scan, format
