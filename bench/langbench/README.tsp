See README.orig !!

Report 'langbench' times for pure interpreter and TSP compiled
versions.

The benchmark files are modified from the original langbench files by:

  1. Including tsp procdef and type annotations.

  2. Simplifying certain coding constructs, such as moving
     embedded commands in expr expressions before the expr,
     for, if, or while command.  Explicit return statments are
     coded where an implicit result was assumed (e.g., fib.tcl).

  3. Wrapping the "main" code into a proc, (e.g., run_fib).  This allows
     the benchmark under test to be run for warmup and timing phases.

  4. Providing a custom driver in tcl (RUN.tcl and RUN_PROG.tcl). The
     custom driver first runs the benchmark with the pure interpreter,
     then sources the TSP compiler and re-sources the benchmark to
     cause the proc to be compiled.

  5. Timings are generated by the tcl "time" command, not the shell time
     command.  tcl "time" averages run times; the original benchmark 
     driver takes the minimum time out of three runs.

  6. Procs are warmed-up prior to timings, this allows C/Tcl to
     byte-code compile the procs, and for JTcl, it allows the C1/C2
     compilers to compile and optimize the code.  Warmup is done
     with a small input file (this README.tsp).  Actual timings
     are done with the input file passed on the RUN.tcl command line.

  7. TIMINGS DO NOT REPORT INTERPRETER STARTUP AND TSP COMPILATION,
     which is different from the langbench "RUN" command.  Timings 
     for other reported languages should be adjusted downward, subtracting
     the time it takes to start the language runtime and parse each
     benchmark.
 
  8. Note that some benchmarks may report a time of "0.00".  The original
     langbench only reports timings to the hundreds of a second, so
     some benchmarks (especially when compiled with TSP) may record times
     less that 1/100's of a second.  Again, note that these timings don't
     include interpreter load, parse, and startup times.

  9. The 'wc' benchmark is run with the full DATA file.  In the original
     langbench, a SMALL file (50,000 lines) is used for the wc 
     benchmark. 
 
Create a "DATA" file using instructions from original README, set
TCL_SRC_DIR to your tcl8.6.x source directory:

	for i in 1 2 3 4 5 6 7 8 9 0; do
		cat $TCL_SRC_DIR/generic/*.[ch]
	done | head -1000000 > DATA


RUN.tcl requires tclsh8.6

To run using benchmarks with CTcl:  TSP_INTERP=ctsp tclsh8.6 RUN.tcl DATA
To run using benchmarks with JTcl:  TSP_INTERP=jtsp tclsh8.6 RUN.tcl DATA
